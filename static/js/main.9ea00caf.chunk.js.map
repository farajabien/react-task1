{"version":3,"sources":["components/InputTag.js","components/Student.js","App.js","index.js"],"names":["InputTag","useState","tags","setTags","onKeyDown","e","value","target","key","className","length","map","tag","i","type","placeholder","Student","studentInfo","toggleGrades","setToggleGrades","grades","total","parseInt","avg","src","pic","alt","firstName","lastName","email","company","skill","grade","onClick","App","url","studentsData","setStudentsData","searchTerm","setSearchTerm","useEffect","axios","get","then","response","data","students","onChange","filter","student","toLowerCase","includes","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAqBeA,MAnBf,WACC,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACC,sBAAKC,UARe,SAACC,GACrB,IAAMC,EAAQD,EAAEE,OAAOD,MACT,UAAVD,EAAEG,KAAmBF,IACxBH,EAAQ,GAAD,mBAAKD,GAAL,CAAWI,KAClBD,EAAEE,OAAOD,MAAQ,OAIlB,UACC,oBAAIG,UAAU,UAAd,SACEP,EAAKQ,OAAS,GAAKR,EAAKS,KAAI,SAACC,EAAKC,GAAN,OAAY,6BAAaD,GAAJC,QAEnD,uBAAOC,KAAK,OAAOC,YAAY,kBCsCnBC,MAnDf,YAKC,IALkC,IAAhBC,EAAe,EAAfA,YAClB,EAAwChB,oBAAS,GAAjD,mBAAOiB,EAAP,KAAqBC,EAArB,KACMC,EAASH,EAAYG,OACvBC,EAAQ,EAEHR,EAAI,EAAGA,EAAIO,EAAOV,OAAQG,IAClCQ,GAASC,SAASF,EAAOP,GAAI,IAG9B,IAAMU,EAAMF,EAAQD,EAAOV,OAM3B,OACC,sBAAKD,UAAU,aAAf,UACC,qBAAKA,UAAU,WAAf,SACC,qBAAKe,IAAKP,EAAYQ,IAAKC,IAAI,kBAEhC,sBAAKjB,UAAU,cAAf,UACC,qBAAIA,UAAU,QAAd,UACEQ,EAAYU,UADd,IAC0BV,EAAYW,YAEtC,sBAAKnB,UAAU,UAAf,UACC,wCAAWQ,EAAYY,SACvB,0CAAaZ,EAAYa,WACzB,wCAAWb,EAAYc,SACvB,0CAAaR,EAAb,UAED,qBAAKd,UAAU,SAAf,SACES,GACAE,EAAOT,KAAI,SAACqB,EAAOnB,GAAR,OACV,sCACOA,EAAI,EADX,KACe,iCAAOmB,EAAP,eAIlB,cAAC,EAAD,IACA,0BAGD,qBAAKvB,UAAU,iBAAf,SACC,wBAAQwB,QAhCiB,WACZd,GAAfD,IA+BE,SACEA,EAAe,IAAM,YCMZgB,MAhDf,WACC,IAAMC,EAAM,+CACZ,EAAwClC,mBAAS,MAAjD,mBAAOmC,EAAP,KAAqBC,EAArB,KACA,EAAoCpC,mBAAS,IAA7C,mBAAOqC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,qBAAU,WACTC,IAAMC,IAAIP,GAAKQ,MAAK,SAACC,GACpBP,EAAgBO,EAASC,KAAKC,eAE7B,CAACX,IAGH,sBAAK1B,UAAU,MAAf,UACC,iDACC2B,EACA,sBAAK3B,UAAU,cAAf,UACC,uBACCK,KAAK,OACLC,YAAY,iBACZgC,SAAU,SAAC1C,GACVkC,EAAclC,EAAEE,OAAOD,UAGzB,uBACC8B,EACCY,QAAO,SAACC,GAAD,MACQ,KAAfX,EACGW,EACAA,EAAQtB,UACPuB,cACAC,SAASb,EAAWY,gBACrBD,EAAQrB,SACPsB,cACAC,SAASb,EAAWY,kBAExBvC,KAAI,SAACsC,GAAD,OACJ,cAAC,EAAD,CAAShC,YAAagC,GAAcA,EAAQG,UAI/C,8BACC,kDCzCLC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.9ea00caf.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nfunction InputTag() {\r\n\tconst [tags, setTags] = useState([])\r\n\tconst inputKeyDown = (e) => {\r\n\t\tconst value = e.target.value\r\n\t\tif (e.key === 'Enter' && value) {\r\n\t\t\tsetTags([...tags, value])\r\n\t\t\te.target.value = null\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div onKeyDown={inputKeyDown}>\r\n\t\t\t<ul className='tagList'>\r\n\t\t\t\t{tags.length > 0 && tags.map((tag, i) => <li key={i}>{tag}</li>)}\r\n\t\t\t</ul>\r\n\t\t\t<input type='text' placeholder='Add A Tag' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default InputTag\r\n","import { useState } from 'react'\r\nimport InputTag from './InputTag'\r\n\r\nfunction Student({ studentInfo }) {\r\n\tconst [toggleGrades, setToggleGrades] = useState(false)\r\n\tconst grades = studentInfo.grades\r\n\tlet total = 0\r\n\r\n\tfor (let i = 0; i < grades.length; i++) {\r\n\t\ttotal += parseInt(grades[i], 10)\r\n\t}\r\n\r\n\tconst avg = total / grades.length\r\n\r\n\tconst toggleGradesHandler = () => {\r\n\t\ttoggleGrades ? setToggleGrades(false) : setToggleGrades(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='studentDiv'>\r\n\t\t\t<div className='imageDiv'>\r\n\t\t\t\t<img src={studentInfo.pic} alt='student pic' />\r\n\t\t\t</div>\r\n\t\t\t<div className='studentInfo'>\r\n\t\t\t\t<h1 className='title'>\r\n\t\t\t\t\t{studentInfo.firstName} {studentInfo.lastName}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className='details'>\r\n\t\t\t\t\t<p>Email: {studentInfo.email}</p>\r\n\t\t\t\t\t<p>Company: {studentInfo.company}</p>\r\n\t\t\t\t\t<p>Skill: {studentInfo.skill}</p>\r\n\t\t\t\t\t<p>Average: {avg}%</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='grades'>\r\n\t\t\t\t\t{toggleGrades &&\r\n\t\t\t\t\t\tgrades.map((grade, i) => (\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tTest {i + 1}: <span>{grade}%</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<InputTag />\r\n\t\t\t\t<hr />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='collapseGrades'>\r\n\t\t\t\t<button onClick={toggleGradesHandler}>\r\n\t\t\t\t\t{toggleGrades ? '-' : '+'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Student\r\n","import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport './App.css'\nimport Student from './components/Student'\n\nfunction App() {\n\tconst url = 'https://api.hatchways.io/assessment/students'\n\tconst [studentsData, setStudentsData] = useState(null)\n\tconst [searchTerm, setSearchTerm] = useState('')\n\n\tuseEffect(() => {\n\t\taxios.get(url).then((response) => {\n\t\t\tsetStudentsData(response.data.students)\n\t\t})\n\t}, [url])\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<h1>Bienvenu Faraja</h1>\n\t\t\t{studentsData ? (\n\t\t\t\t<div className='studentList'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Search by name'\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetSearchTerm(e.target.value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{studentsData\n\t\t\t\t\t\t.filter((student) =>\n\t\t\t\t\t\t\tsearchTerm === ''\n\t\t\t\t\t\t\t\t? student\n\t\t\t\t\t\t\t\t: student.firstName\n\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t.includes(searchTerm.toLowerCase()) ||\n\t\t\t\t\t\t\t\t  student.lastName\n\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t.includes(searchTerm.toLowerCase())\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.map((student) => (\n\t\t\t\t\t\t\t<Student studentInfo={student} key={student.id} />\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Loading...</h1>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}